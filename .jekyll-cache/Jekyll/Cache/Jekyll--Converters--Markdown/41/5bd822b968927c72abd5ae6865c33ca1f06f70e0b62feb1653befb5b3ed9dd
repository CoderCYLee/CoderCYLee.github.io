I"Q<ul id="markdown-toc">
  <li><a href="#简介" id="markdown-toc-简介">简介</a></li>
  <li><a href="#头文件" id="markdown-toc-头文件">头文件</a></li>
  <li><a href="#例子" id="markdown-toc-例子">例子</a></li>
</ul>
<hr />

<h1 id="简介">简介</h1>

<p>是专门为了<code class="language-plaintext highlighter-rouge">transform</code>动画而设置的</p>

<h1 id="头文件">头文件</h1>

<pre><code class="language-objective-c">/* CoreAnimation - CAValueFunction.h

   Copyright (c) 2008-2016, Apple Inc.
   All rights reserved. */

#import &lt;QuartzCore/CABase.h&gt;
#import &lt;Foundation/NSObject.h&gt;

NS_ASSUME_NONNULL_BEGIN

CA_CLASS_AVAILABLE (10.6, 3.0, 9.0, 2.0)
@interface CAValueFunction : NSObject &lt;NSCoding&gt;
{
@protected
  NSString *_string;
  void *_impl;
}

// 调用方法
+ (nullable instancetype)functionWithName:(NSString *)name;

@property(readonly) NSString *name;

@end

/** Value function names. **/

/* The `rotateX', `rotateY', `rotateZ' functions take a single input
 * value in radians, and construct a 4x4 matrix representing the
 * corresponding rotation matrix. */
// 设置为x轴旋转
CA_EXTERN NSString * const kCAValueFunctionRotateX
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// 设置为y轴旋转
CA_EXTERN NSString * const kCAValueFunctionRotateY
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// 设置为z轴旋转
CA_EXTERN NSString * const kCAValueFunctionRotateZ
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);

/* The `scale' function takes three input values and constructs a
 * 4x4 matrix representing the corresponding scale matrix. */
// 3个方向的缩放
CA_EXTERN NSString * const kCAValueFunctionScale
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);

/* The `scaleX', `scaleY', `scaleZ' functions take a single input value
 * and construct a 4x4 matrix representing the corresponding scaling
 * matrix. */
// x轴缩放
CA_EXTERN NSString * const kCAValueFunctionScaleX
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// y轴缩放
CA_EXTERN NSString * const kCAValueFunctionScaleY
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// z轴缩放
CA_EXTERN NSString * const kCAValueFunctionScaleZ
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);

/* The `translate' function takes three input values and constructs a
 * 4x4 matrix representing the corresponding scale matrix. */
// 3个方向的位移
CA_EXTERN NSString * const kCAValueFunctionTranslate
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);

/* The `translateX', `translateY', `translateZ' functions take a single
 * input value and construct a 4x4 matrix representing the corresponding
 * translation matrix. */
// x轴位移
CA_EXTERN NSString * const kCAValueFunctionTranslateX
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// y轴位移
CA_EXTERN NSString * const kCAValueFunctionTranslateY
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);
// z轴位移
CA_EXTERN NSString * const kCAValueFunctionTranslateZ
    CA_AVAILABLE_STARTING (10.6, 3.0, 9.0, 2.0);

NS_ASSUME_NONNULL_END

</code></pre>

<h1 id="例子">例子</h1>

<p>因为我们没有办法直接改变<code class="language-plaintext highlighter-rouge">transform3D</code>中的属性，通过这个参数，可以帮助我们直接操作<code class="language-plaintext highlighter-rouge">transfrom3D</code>属性变化产生动画效果，举例如下，一个绕<code class="language-plaintext highlighter-rouge">Z</code>轴旋转的动画：</p>

<pre><code class="language-objective-c">// 绕z轴旋转的动画
CABasicAnimation * basicAnimation = [CABasicAnimation animationWithKeyPath:@"transform"];
// 从0度开始
basicAnimation.fromValue = @0;
// 旋转到180度
basicAnimation.toValue = [NSNumber numberWithFloat:M_PI];
// 时间2S
basicAnimation.duration = 2;
// 设置为z轴旋转
basicAnimation.valueFunction = [CAValueFunction functionWithName:kCAValueFunctionRotateZ];
// 执行动画
[layer addAnimation:basicAnimation forKey:@"aZRoateBasicAnimationKey"];
</code></pre>

<p>当然如果不使用<code class="language-plaintext highlighter-rouge">valueFunction</code>也是可以实现的</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 绕z轴旋转的动画</span>
<span class="n">CABasicAnimation</span> <span class="o">*</span> <span class="n">basicAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nf">animationWithKeyPath</span><span class="p">:</span><span class="s">@"transform.rotation.z"</span><span class="p">];</span>
<span class="c1">// 从0度开始</span>
<span class="n">basicAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="mi">@0</span><span class="p">;</span>
<span class="c1">// 旋转到180度</span>
<span class="n">basicAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nf">numberWithFloat</span><span class="p">:</span><span class="n">M_PI</span><span class="p">];</span>
<span class="c1">// 时间2S</span>
<span class="n">basicAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
<span class="c1">// 执行动画</span>
<span class="p">[</span><span class="n">layer</span> <span class="nf">addAnimation</span><span class="p">:</span><span class="n">basicAnimation</span> <span class="nf">forKey</span><span class="p">:</span><span class="s">@"aZRoateBasicAnimationKey"</span><span class="p">];</span>
</code></pre></div></div>

:ET