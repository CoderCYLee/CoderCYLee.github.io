I"ç%<ul id="markdown-toc">
  <li><a href="#web-application-flow" id="markdown-toc-web-application-flow">Web Application Flow</a>    <ul>
      <li><a href="#1-users-are-redirected-to-request-their-github-identity" id="markdown-toc-1-users-are-redirected-to-request-their-github-identity">1. Users are redirected to request their GitHub identity</a></li>
      <li><a href="#2-users-are-redirected-back-to-your-site-by-github" id="markdown-toc-2-users-are-redirected-back-to-your-site-by-github">2. Users are redirected back to your site by GitHub</a></li>
      <li><a href="#3-use-the-access-token-to-access-the-api" id="markdown-toc-3-use-the-access-token-to-access-the-api">3. Use the access token to access the API</a></li>
    </ul>
  </li>
  <li><a href="#non-web-application-flow" id="markdown-toc-non-web-application-flow">Non-Web Application Flow</a></li>
  <li><a href="#redirect-urls" id="markdown-toc-redirect-urls">Redirect URLs</a></li>
</ul>
<hr />

<h2 id="web-application-flow">Web Application Flow</h2>

<p>The flow to authorize users for your app is:</p>

<ul>
  <li>Users are redirected to request their GitHub identity</li>
  <li>Users are redirected back to your site by GitHub</li>
  <li>Your app accesses the API with the user‚Äôs access token</li>
</ul>

<h3 id="1-users-are-redirected-to-request-their-github-identity">1. Users are redirected to request their GitHub identity</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET https://github.com/login/oauth/authorize

</code></pre></div></div>

<p><strong>Parameters</strong></p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">client_id</code></td>
      <td><code class="language-plaintext highlighter-rouge">string</code></td>
      <td><strong>Required</strong>. The client ID you received from GitHub when you <a href="https://github.com/settings/applications/new">registered</a>.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">redirect_uri</code></td>
      <td><code class="language-plaintext highlighter-rouge">string</code></td>
      <td>The URL in your application where users will be sent after authorization. See details below about <a href="https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-authorization-options-for-oauth-apps/#redirect-urls">redirect urls</a>.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scope</code></td>
      <td><code class="language-plaintext highlighter-rouge">string</code></td>
      <td>A space-delimited list of <a href="https://developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/">scopes</a>. If not provided, <code class="language-plaintext highlighter-rouge">scope</code>defaults to an empty list for users that have not authorized any scopes for the application. For users who have authorized scopes for the application, the user won‚Äôt be shown the OAuth authorization page with the list of scopes. Instead, this step of the flow will automatically complete with the set of scopes the user has authorized for the application. For example, if a user has already performed the web flow twice and has authorized one token with <code class="language-plaintext highlighter-rouge">user</code> scope and another token with <code class="language-plaintext highlighter-rouge">repo</code>scope, a third web flow that does not provide a <code class="language-plaintext highlighter-rouge">scope</code> will receive a token with <code class="language-plaintext highlighter-rouge">user</code> and <code class="language-plaintext highlighter-rouge">repo</code> scope.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">state</code></td>
      <td><code class="language-plaintext highlighter-rouge">string</code></td>
      <td>An unguessable random string. It is used to protect against cross-site request forgery attacks.</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">allow_signup</code></td>
      <td><code class="language-plaintext highlighter-rouge">string</code></td>
      <td>Whether or not unauthenticated users will be offered an option to sign up for GitHub during the OAuth flow. The default is <code class="language-plaintext highlighter-rouge">true</code>. Use <code class="language-plaintext highlighter-rouge">false</code> in the case that a policy prohibits signups.</td>
    </tr>
  </tbody>
</table>

<h3 id="2-users-are-redirected-back-to-your-site-by-github">2. Users are redirected back to your site by GitHub</h3>

<p>If the user accepts your request, GitHub redirects back to your site with a temporary <code class="language-plaintext highlighter-rouge">code</code> in a code parameter as well as the state you provided in the previous step in a <code class="language-plaintext highlighter-rouge">state</code> parameter. If the states don‚Äôt match, the request was created by a third party and the process should be aborted.</p>

<p>Exchange this <code class="language-plaintext highlighter-rouge">code</code> for an access token:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>POST https://github.com/login/oauth/access_token

</code></pre></div></div>

<p><strong>Parameters</strong></p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>client_id</td>
      <td>string</td>
      <td><strong>Required.</strong> The client ID you received from GitHub for your GitHub App.</td>
    </tr>
    <tr>
      <td>client_secret</td>
      <td>string</td>
      <td><strong>Required.</strong> The client secret you received from GitHub for your GitHub App.</td>
    </tr>
    <tr>
      <td>code</td>
      <td>string</td>
      <td><strong>Required.</strong> The code you received as a response to Step 1.</td>
    </tr>
    <tr>
      <td>redirect_uri</td>
      <td>string</td>
      <td>The URL in your application where users are sent after authorization.</td>
    </tr>
    <tr>
      <td>state</td>
      <td>string</td>
      <td>The unguessable random string you provided in Step 1.</td>
    </tr>
  </tbody>
</table>

<p><strong>Response</strong></p>

<p>By default, the response takes the following form:</p>

<p><code class="language-plaintext highlighter-rouge">access_token=e72e16c7e42f292c6912e7710c838347ae178b4a&amp;token_type=bearer</code></p>

<p>You can also receive the content in different formats depending on the Accept header:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Accept: application/json
{"access_token":"e72e16c7e42f292c6912e7710c838347ae178b4a", "scope":"repo,gist", "token_type":"bearer"}

Accept: application/xml
&lt;OAuth&gt;
  &lt;token_type&gt;bearer&lt;/token_type&gt;
  &lt;scope&gt;repo,gist&lt;/scope&gt;
  &lt;access_token&gt;e72e16c7e42f292c6912e7710c838347ae178b4a&lt;/access_token&gt;
&lt;/OAuth&gt;

</code></pre></div></div>

<h3 id="3-use-the-access-token-to-access-the-api">3. Use the access token to access the API</h3>

<p>The access token allows you to make requests to the API on a behalf of a user.</p>

<p>GET <a href="https://api.github.com/user?access_token=">https://api.github.com/user?access_token=</a>‚Ä¶</p>

<p>You can pass the token in the query params as shown above, but a cleaner approach is to include it in the Authorization header.</p>

<p>Authorization: token OAUTH-TOKEN</p>

<p>For example, in curl you can set the Authorization header like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -H "Authorization: token OAUTH-TOKEN" https://api.github.com/user

</code></pre></div></div>

<h2 id="non-web-application-flow">Non-Web Application Flow</h2>

<p>Use <a href="https://developer.github.com/v3/auth#basic-authentication">Basic Authentication</a> to create an OAuth2 token using the <a href="https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization">interface</a>. With this technique, a username and password doesn‚Äôt need to be permanently stored and the user can revoke access at any time.</p>

<p><strong>Note:</strong> When using the non-web application flow to create an OAuth2 token, make sure to understand how to <a href="https://developer.github.com/v3/auth/#working-with-two-factor-authentication">work with two-factor authentication</a> if you or your users have two-factor authentication enabled.</p>

<h2 id="redirect-urls">Redirect URLs</h2>

<p>The <code class="language-plaintext highlighter-rouge">redirect_uri</code> parameter is optional. If left out, GitHub will redirect users to the callback URL configured in the OAuth Application settings. If provided, the redirect URL‚Äôs host and port must exactly match the callback URL. The redirect URL‚Äôs path must reference a subdirectory of the callback URL.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CALLBACK: http://example.com/path

GOOD: http://example.com/path
GOOD: http://example.com/path/subdir/other
BAD:  http://example.com/bar
BAD:  http://example.com/
BAD:  http://example.com:8080/path
BAD:  http://oauth.example.com:8080/path
BAD:  http://example.org
</code></pre></div></div>
:ET